<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.2.xsd">
<!--
	max-sessions=최대세션이 1개 
	expired-url=중복세션이 생겨났을시 이동할주소
	error-if-maximum-ecceded=첫번째 로그인 세션 유지, 두번쨰 세션을 막음
	<intercept-url pattern="/resources/*" access="permitAll"/> = resources파일을 모두 접근할 수 있게함 ex)css,js 
			 
-->
	<http auto-config="true" use-expressions="true">
		<form-login login-page="/loginform"
		default-target-url="/loginsuccess" 
		authentication-failure-url="/loginfail" />
		<logout logout-success-url="/logoutform" />
		<session-management invalid-session-url="/loginform">
		<concurrency-control max-sessions="1" expired-url="/loginform" error-if-maximum-exceeded="true"/>
		</session-management>
		 <intercept-url pattern="/resources/*" access="permitAll"/> 
	</http>
	<!--Role_MANAGER , Role_ADMIN, Role_USER  -->
	<authentication-manager>
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="SELECT 
		MID as userName, MPASSWD as password, ENABLED FROM member where mid=?"
				authorities-by-username-query="SELECT 
		MID as userName, authority  FROM member WHERE mid=?" />
		</authentication-provider>
	</authentication-manager>
	
	
	<!-- Permission MethodInvocation Expression : 소스 레벨에서 제어되는 옵션 -->    

<beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder"></beans:bean>

</beans:beans>
