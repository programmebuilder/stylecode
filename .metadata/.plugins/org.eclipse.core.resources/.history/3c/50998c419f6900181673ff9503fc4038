package stylecode.kosta180.controller;

import javax.inject.Inject;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.config.annotation.EnableWebMvc;

import stylecode.kosta180.domain.ShoppingMallSearchVO;
import stylecode.kosta180.service.ShoppingmallService;

@Controller
@RequestMapping("/chatbot")
public class ChatbotController {
	
	@Inject
	private ShoppingmallService service;
	
	@RequestMapping(value="", method = RequestMethod.GET)
	public String test( Model model, ShoppingMallSearchVO vo) throws Exception {
		model.addAttribute("list", service.listShoppingMall(vo));

		return "NewFile";
	}
	
	@RequestMapping(value="/input", method = RequestMethod.GET)
	public String test(@RequestParam(value="input") String input, Model model, ShoppingMallSearchVO vo) throws Exception {
		model.addAttribute("list", service.listShoppingMall(vo));
		
		System.out.println(input);
		String str = "안녕하세요";
		
		if(input.contains("안녕")||input.contains("하이"))
			str="안녕하세요";
		else if(input.contains("배송")) {
			str="주문하신 상품은 판매 쇼핑몰에서 직접 발송하고 있습니다. 따라서 정확한 발송 예정일은 쇼핑몰, 상품별로 다를 수 있습니다. 주문에 관한 사항은 판매 쇼핑몰의 고객 센터를 이용해 주세요.";
		} else if(input.contains("교환")||input.contains("환불")) {
			str="주문하신 상품의 교환/환불 처리는 판매 쇼핑몰의 정책에 따라 진행됩니다. 교환/환불에 관한 자세한 문의는 판매 쇼핑몰을 이용해 주세요.";
		}
		return str;
	}
}
