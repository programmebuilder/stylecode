package stylecode.sns.controller;

import java.util.List;

import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.google.gson.Gson;

import stylecode.sns.domain.SocialMediaListVO;
import stylecode.sns.domain.SocialMediaVO;
import stylecode.sns.service.SocialMediaService;

@Controller
@RequestMapping("/sns/*")
public class SocialMediaController {

	private static final Logger logger = LoggerFactory.getLogger(SocialMediaController.class);

	@Inject
	private SocialMediaService service;
	
	@RequestMapping(value = "/home", method = RequestMethod.GET)
	public void home() throws Exception {
		;
	}

	@RequestMapping(value = "/register", method = RequestMethod.GET)
	public void registerGET(SocialMediaVO vo, Model model) throws Exception {
		logger.info("register GET ......");
	}

	// 게시물 작성
	@RequestMapping(value = "/register", method = RequestMethod.POST)
	public String registerPOST(SocialMediaVO vo) throws Exception {
		logger.info("register POST ......");
		logger.info(vo.toString());

		service.regist(vo);

		return "redirect:/sns/list";
	}

	// 게시물 전체 출력(최신순)
	@RequestMapping(value = "/list", method = RequestMethod.GET)
	public String sns(Model model) throws Exception {
		logger.info("list GET ......");

		model.addAttribute("list", service.list());
		model.addAttribute("listAttach", service.listAttach());

		return "sns/list";
	}
	
	@RequestMapping(value = "/listPagination", method = RequestMethod.POST)
	public void listPaginationPOST(String page,HttpServletResponse response) throws Exception {
		response.setContentType("text/html;charset=UTF-8");
		logger.info("listPagination POST ......");

		List<SocialMediaListVO> list = service.listPagination(page, Integer.parseInt(page)*5+""); 
		
		Gson gson = new Gson();
		
		String result = gson.toJson(list);
		
		response.getWriter().write(result);
	}
}
