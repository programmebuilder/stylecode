<!-- <?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.2.xsd">


http 태그는 접근 권한설정하는 부분이고,계정으로 로그인 하면 ROLE_USER 라는 권한을 부여받게 된다
IS_AUTHENTICATED_ANONYMOUSLY 익명 사용자
  
	 IS_AUTHENTICATED_REMEMBERED REMEMBERED 사용자
	 
	 IS_AUTHENTICATED_FULLY 인증된 사용자


	security-context.xml 파일은 공통적인 보안에 대한 설정을 담당하는 파일이라고 생각하면 될 것 같다.

	
	<http auto-config='true'>
		<intercept-url pattern="/login" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<intercept-url pattern="/login_duplicate" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<intercept-url pattern="/**" access="ROLE_USER" />
		로그인 페이지로 넘어가는것을 정의해준다 username-parameter ->loginpage 에 있는 form에 들어가있는 
			id이름이 id password-parameter -> loginpage 에 있는 form에 들어가있는 password이름이 pw
		<form-login login-page="/login"
		 username-parameter="id"
			password-parameter="pw" 
			login-processing-url="/loginProcess"
			default-target-url="/login_success" 
			authentication-failure-url="/login"
			always-use-default-target='true' />

		<session-management>
			<concurrency-control max-sessions="1"
				expired-url="/login_duplicate" />
		</session-management>
		<logout logout-url="/logout" logout-success-url="/welcome" />
	</http>


	<authentication-manager> <authentication-provider> <user-service> <user 
		name="guest" password="guest" authorities="ROLE_USER"/> </user-service> </authentication-provider> 
		</authentication-manager>

	<beans:bean
		class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler" />

	<authentication-manager>
		<authentication-provider ref="customAuthenticationProvider" />
	</authentication-manager>

	<beans:bean id="customAuthenticationProvider" class="stylecode.kosta180.security.CustomAuthenticationProvider">
	</beans:bean>
		
	

</beans:beans>
 -->