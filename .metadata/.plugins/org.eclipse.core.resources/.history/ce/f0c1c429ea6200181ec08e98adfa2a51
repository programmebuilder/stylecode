<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<!DOCTYPE>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>uploadAjax</title>
<script src="/resources/sns/dropzone/js/dropzone.js"></script>
<script src="/resources/sns/dropzone/css/dropzone.css"></script>
<script src="/resources/sns/dropzone/css/style.css"></script>
<script>
$(function() {
	//Dropzone
	var dropzone = new Dropzone('#demo-upload', {
	  previewTemplate: document.querySelector('#preview-template').innerHTML,
	  parallelUploads: 2,
	  thumbnailHeight: 120,
	  thumbnailWidth: 120,
	  maxFilesize: 3,
	  filesizeBase: 1000,
	  thumbnail: function(file, dataUrl) {
	    if (file.previewElement) {
	      file.previewElement.classList.remove("dz-file-preview");
	      var images = file.previewElement.querySelectorAll("[data-dz-thumbnail]");
	      for (var i = 0; i < images.length; i++) {
	        var thumbnailElement = images[i];
	        thumbnailElement.alt = file.name;
	        thumbnailElement.src = dataUrl;
	      }
	      setTimeout(function() { file.previewElement.classList.add("dz-image-preview"); }, 1);
	    }
	  }

	});


	// Now fake the file upload, since GitHub does not handle file uploads
	// and returns a 404

	var minSteps = 6,
	    maxSteps = 60,
	    timeBetweenSteps = 100,
	    bytesPerStep = 100000;

	dropzone.uploadFiles = function(files) {
	  var self = this;

	  for (var i = 0; i < files.length; i++) {

	    var file = files[i];
	        totalSteps = Math.round(Math.min(maxSteps, Math.max(minSteps, file.size / bytesPerStep)));

	    for (var step = 0; step < totalSteps; step++) {
	      var duration = timeBetweenSteps * (step + 1);
	      setTimeout(function(file, totalSteps, step) {
	        return function() {
	          file.upload = {
	            progress: 100 * (step + 1) / totalSteps,
	            total: file.size,
	            bytesSent: (step + 1) * file.size / totalSteps
	          };

	          self.emit('uploadprogress', file, file.upload.progress, file.upload.bytesSent);
	          if (file.upload.progress == 100) {
	            file.status = Dropzone.SUCCESS;
	            self.emit("success", file, 'success', null);
	            self.emit("complete", file);
	            self.processQueue();
	          }
	        };
	      }(file, totalSteps, step), duration);
	    }
	  }
	}
})

</script>
<style>
.fileDrop {
	width: 100%;
	height: 200px;
	border: 1px dotted blue;
}

small {
	margin-left: 3px;
	font-weight: bold;
	color: gray;
}
</style>
</head>
<body>
	<h3>Ajax File Upload</h3>
	<div class="fileDrop"></div>
	<div class="uploadList"></div>
	<form action="/file-upload" class="dropzone">
		<div class="fallback">
			<input name="file" type="file" multiple />
		</div>
	</form>
</body>
<script src="//code.jquery.com/jquery-1.11.3.min.js"></script>
<script>
	$(".fileDrop").on("dragenter dragover", function(event) {
		event.preventDefault();
	});
	
	$(".fileDrop").on("drop", function(event) {
		event.preventDefault();
		
		// 전달된 파일 데이터를 가져옴
		var files = event.originalEvent.dataTransfer.files;
		
		var file = files[0];
		
		var formData = new FormData();
		
		formData.append("file", file);
		
		$.ajax({
			url: "/uploadAjax",
			data: formData,
			dataType: "text",
			processData: false,
			contentType: false,
			type: "POST",
			success: function(data) {
				var str = "";
				
				console.log(data);
				console.log(checkImageType(data));
				
				if (checkImageType(data)) {
					str = "<div>"
						+ 	"<a href='displayFile?fileName="+getImageLink(data)+"'>"
						+ 		"<img src='displayFile?fileName="+data+"'/>"
						+	"</a>"
						+	"<small data-src="+data+">X</small>"
						+ "</div>";
				}
				
				$(".filedrop").append(str);
			}
		});
	});
	
	$(".filedrop").on("click", "small", function(event) {
		var that = $(this);
		
		$.ajax({
			url: "deleteFile",
			data: {fileName:$(this).attr("data-src")},
			dataType: "text",
			type: "POST",
			success: function(result) {
				if (result == 'delete') {
					that.parent("div").remove();
				}
			}
		});
	});
	
	function checkImageType(fileName) {
		// 파일 확장자 존재 유무 확인
		var pattern = /jpg$|gif$|png$|jpeg$/i;
		
		return fileName.match(pattern);
	}
	
	function getImageLink(fileName) {
		if (!checkImageType(fileName)) {
			return;
		}
		
		var front = fileName.substr(0, 12);
		var end = fileName.substr(14);
		
		return front + end;
	}
</script>
</html>