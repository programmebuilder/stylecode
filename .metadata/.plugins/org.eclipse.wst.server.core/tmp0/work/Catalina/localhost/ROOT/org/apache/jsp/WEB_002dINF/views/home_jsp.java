/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.52
 * Generated at: 2018-05-28 08:02:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class home_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1525949837369L));
    _jspx_dependants.put("jar:file:/C:/finalproject/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/stylecode/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script src=\"http://code.jquery.com/jquery-3.1.1.min.js\"></script>\r\n");
      out.write("<script src=\"../resources/bootstrap/js/bootstrap.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\"\r\n");
      out.write("\thref=\"../resources/bootstrap/css/bootstrap.css\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("<title>Home</title>\r\n");

	String mId = "aaaa@NAVER.COM";
	session.setAttribute("mId", mId);

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<h3>관리자 페이지</h3>\r\n");
      out.write("\t<div>\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t<form action=\"\">\r\n");
      out.write("\t\t<!--  버튼 -->\r\n");
      out.write("\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\t<div class=\"container\" style=\"margin: 10px;\">\r\n");
      out.write("\t\t\t\t\t  <div class=\"row\">\r\n");
      out.write("\t\t\t\t\t    <div class=\"col-sm\">\r\n");
      out.write("\t\t\t\t\t      <input style=\"margin-top: 15px;\" type=\"checkbox\" name=\"checkAll\" id=\"th_checkAll\" />&emsp;전체 선택\r\n");
      out.write("\t\t\t\t\t    </div>\r\n");
      out.write("\t\t\t\t\t    <div class=\"col-sm\">\r\n");
      out.write("\t\t\t\t\t      \r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t <div class=\"col-sm\">\r\n");
      out.write("\t\t\t\t\t      \t\t<button type=\"button\" class=\"btn btn-outline-dark\">승인</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-outline-dark\">거절</button>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t </div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\r\n");
      out.write("\r\n");
      out.write("<!-- - \t\t<div>\r\n");
      out.write("\t\t\t<p class=\"list-group-item list-group-item-action list-group-item-light\" style=\"background-color: #FFFFFF;\">\r\n");
      out.write("\t\t\t\t<input type=\"checkbox\" name=\"checkAll\" id=\"th_checkAll\" />전체 선택\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"btn btn-outline-dark\">승인</button>\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"btn btn-outline-dark\">거절</button>\r\n");
      out.write("\t\t\t\t</p>\r\n");
      out.write("\t\t</div>  -->\r\n");
      out.write("\t\t\r\n");
      out.write(" \r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\t<div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<p class=\"list-group-item list-group-item-action list-group-item-light\" style=\"background-color: #FFFFFF;\">\r\n");
      out.write("\t\t\t\t\t<input type=\"checkbox\"  name=\"checkRow\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${content.IDX}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"/>\r\n");
      out.write("\t\t\t\t\t<img width=\"100px\" height=\"100px\" alt=\"사진이 없음\" class=\"img-circle\" src=\"../resources/MH/images/lip.png\"> \r\n");
      out.write("\t\t\t\t\t<span>&emsp;</span><a href=\"www.naver.com\"><b style=\"color: black;\">스타일난다</b> </a>\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<span class=\"spmInfo\">&emsp;관리자 이름</span>\r\n");
      out.write("\t\t\t\t\t<span class=\"spmInfo\">&emsp;스타일난다 입니다.</span>\r\n");
      out.write("\t\t\t\t</p>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("\t\t<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- 체크박스 전체체크/해제 하는 js -->\r\n");
      out.write("\t\t$(\"#th_checkAll\").on(\"click\", function(){\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t    if( $(\"#th_checkAll\").is(':checked') ){\r\n");
      out.write("\t\t\t      $(\"input[name=checkRow]\").prop(\"checked\", true);\r\n");
      out.write("\t\t\t    }else{\r\n");
      out.write("\t\t\t      $(\"input[name=checkRow]\").prop(\"checked\", false);\r\n");
      out.write("\t\t\t    };\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
